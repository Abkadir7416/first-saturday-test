#include <iostream>
#include <vector>
#include <deque>

using namespace std;

vector<int> getmaxvalue(vector<int>& nums, int k) {
    
    deque<int> dq;
    
    vector<int> ans;
    
    for(int i=0; i<k; i++){
        while(!dq.empty() && dq.back()<nums[i]){
            dq.pop_back();
        }
        
        dq.push_back(nums[i]);
    }
    
    ans.push_back(dq.front());
    
    for(int i=k; i<nums.size(); i++){
        
        if(dq.front()==nums[i-k]) dq.pop_front();
        
        while(!dq.empty() && dq.back()<nums[i]){
            dq.pop_back();
        }
        
        dq.push_back(nums[i]);
        ans.push_back(dq.front());
    }
    return ans;
    
}


int main() {
    vector<int> nums = {1, 2, 3, 1, 4, 5, 2, 3, 6};
    int k = 3;

    vector<int> result = getmaxvalue(nums, k);

    cout << "Maximum Values of Sliding Window are:: ";
    for (int num : result) {
        cout << num << " ";
    }

    return 0;
}